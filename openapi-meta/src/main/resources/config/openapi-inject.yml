openapi: 3.0.0
info:
  version: 1.0.0
  title: Light-4j OpenAPI Admin
paths:
  '/adm/messagereplaymetadata':
    post:
      tags:
        - "kafka-sidecar"
      operationId: TopicReplayMetadataPost
      summary: Post message for replay the message from topic
      description: Post message for replay the message from topic
      requestBody:
        description: "Topic message replay metadata object"
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TopicReplayMetadata"
      parameters:
        - $ref: '#/components/parameters/x-traceability-id'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProduceResponse"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Status"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Status"
      security:
        - admin-scope:
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
  /adm/health/${server.serviceId:com.networknt.placeholder-1.0.0}:
    parameters:
      - name: server.serviceId:com.networknt.placeholder-1.0.0
        in: path
        description: Service Id
        required: true
        schema:
          type: string
    get:
      description: pass through to the liveness endpoint that belongs to backend api
      security:
        - admin-scope:
            # okta doesn't support either for now
            # for control pane to access all businesses' admin endpoints
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A string OK will be returned.
  /adm/server/info:
    get:
      description: get the proxy server info and corresponding backend service info
      security:
        - admin-scope:
            # okta doesn't support either for now
            # for control pane to access all businesses' admin endpoints
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A JSON object of server info
          content:
            application/json:
              schema:
                type: object

  /adm/chaosmonkey:
    get:
      description: to get the current chaosmonkey settings
      security:
        - admin-scope:
            # okta doesn't support either for now
            # for control pane to access all businesses' admin endpoints
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A JSON object of Chaos Monkey configuration
          content:
            application/json:
              schema:
                type: object
            
  /adm/chaosmonkey/{assault}:
    post:
      description: to update chaosmonkey settings
      parameters:
        - name: assault
          in: path
          description: Service Id
          required: true
          schema:
            type: string
      
      requestBody:
        description: to update chaosmonkey settings
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      security:
        - admin-scope:
            # okta doesn't support either for now
            # for control pane to access all businesses' admin endpoints
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A JSON object of Chaos Monkey configuration
          content:
            application/json:
              schema:
                type: object

  /adm/logger:
    get:
      description: to get the current logging settings
      security:
        - admin-scope:
            # okta doesn't support either for now
            # for control pane to access all businesses' admin endpoints
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A JSON object of loggers
          content:
            application/json:
              schema:
                type: object
            
    post:
      description: to modify the logging settings
      requestBody:
        description: to update logging settings
        content:
          application/json:
            schema:
              type: "array"
              items:
                type: "object"
                properties:
                  name:
                    type: "string"
                  level:
                    type: "string"
        required: true
      security:
        - admin-scope:
            # okta doesn't support either for now
            # for control pane to access all businesses' admin endpoints
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A JSON object of loggers
          content:
            application/json:
              schema:
                type: object

  /adm/logger/content:
    get:
      description: to get the content of the logs from this service.
      security:
        - admin-scope:
            - admin
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A JSON object of loggers
          content:
            application/json:
              schema:
                type: object

  /adm/modules:
    get:
      description: to get the all registered modules and handlers to form a dropdown for module config reload
      security:
        - admin-scope:
            # okta doesn't support either for now
            # for control pane to access all businesses' admin endpoints
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A JSON object of loggers
          content:
            application/json:
              schema:
                type: object
    post:
      description: to trigger the config reload for all modules or specified modules selected on control pane
      requestBody:
        description: to trigger the reload from the config server from the control pane.
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      security:
        - admin-scope:
            # okta doesn't support either for now
            # for control pane to access all businesses' admin endpoints
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A JSON object of loggers
          content:
            application/json:
              schema:
                type: object
            
  /adm/shutdown:
    delete:
      summary: "Shutdown the service instance to force a restart."
      description: "Returns a JSON body of shutdown time"
      operationId: "serviceShutdown"
      security:
      - admin-scope:
            # okta doesn't support either for now
            # for control pane to access all businesses' admin endpoints
            - admin
            # for each business to access their own admin endpoints
            - ${server.serviceId:com.networknt.placeholder-1.0.0}/admin
      responses:
        '200':
          description: A JSON object of loggers
          content:
            application/json:
              schema:
                type: object

components:
  securitySchemes:
    admin-scope:
      type: oauth2
      description: This API uses OAuth 2 with the client credential grant flow.
      flows:
        clientCredentials:
          tokenUrl: 'https://localhost:6882/token'
          scopes:
            "admin": "Grant admin access to light4j components' admin endpoint for this API, api platform team "
            "${server.serviceId}/admin": "Grant admin access to light4j components' admin endpoints for this API ,  API owner"
  parameters:
    x-traceability-id:
      name: x-traceability-id
      description: "Common header parameters for centeralized logging"
      in: header
      required: true
      schema:
        $ref: 'https://api.swaggerhub.com/domains/Sun-Life-Financial/EnterpriseCommonComponents/1.4.5#/components/schemas/x-traceability-id'
    schemas:
      TopicReplayMetadata:
        type: object
        properties:
          topicName:
            type: string
          dlqIndicator:
            type: string
          partition:
            type: number
          startOffset:
            type: number
          endOffset:
            type: number
          consumerGroup:
            type: string
          timeout:
            type: number
          streamingApp:
            type: boolean
          destinationTopic:
            type: string
          lastRetry:
            type: boolean
      ProduceResponse:
        type: object
        properties:
          keySchemaId:
            type: integer
          valueSchemaId:
            type: integer
          offsets:
            type: array
            items:
              "$ref": "#/components/schemas/PartitionOffset"
      PartitionOffset:
        type: object
        properties:
          topic:
            type: string
          partition:
            type: integer
          offset:
            type: number
          metadata:
            type: string